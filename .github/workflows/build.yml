on:
  push:
  schedule:
    - cron: 0 5 * * *

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

defaults:
  run:
    shell: bash

jobs:
  Update-repository:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 10
      - name: Fetch upstream repo
        run: |
          git remote add upstream https://github.com/llvm/llvm-project.git
          git -c protocol.version=2 fetch --depth=10000 --no-tags --prune --progress --no-recurse-submodules upstream master
      - name: Fast forward main branch
        run: |
          git config --local user.email "alexey.sotkin@intel.com"
          git config --local user.name "Alexey Sotkin"
          git pull --ff-only upstream master
      - name: Push the main branch to the origin repo
        run: git push origin master:master
      - name: Rebase spirv branch
        run: |
          git -c protocol.version=2 fetch --depth=1000 --no-tags --prune --progress --no-recurse-submodules origin spirv
          git checkout -b spirv -t origin/spirv
          git rebase origin/master
      - name: Push spirv branch to the origin repo
        run: git push -f origin spirv:spirv


  Build:
    runs-on: ubuntu-latest
    needs: [Update-repository]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: spirv

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE/llvm -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_TARGETS_TO_BUILD=X86 -DBUILD_SHARED_LIBS=ON


    - name: check-mlir
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE --target check-mlir -- -j2
